{"version":3,"file":"index.cjs.js","sources":["../../../dist/loaders/code-file/src/helpers.js","../../../dist/loaders/code-file/src/exports.js","../../../dist/loaders/code-file/src/load-from-module.js","../../../dist/loaders/code-file/src/index.js"],"sourcesContent":["export function pick(obj, keys) {\n    for (const key of keys) {\n        if (obj[key]) {\n            return obj[key];\n        }\n    }\n    return obj;\n}\n// checkers\nexport function isSchemaText(obj) {\n    return typeof obj === 'string';\n}\nexport function isWrappedSchemaJson(obj) {\n    const json = obj;\n    return json.data !== undefined && json.data.__schema !== undefined;\n}\nexport function isSchemaJson(obj) {\n    const json = obj;\n    return json !== undefined && json.__schema !== undefined;\n}\nexport function isSchemaAst(obj) {\n    return obj.kind !== undefined;\n}\n//# sourceMappingURL=helpers.js.map","import { parse, buildClientSchema, isSchema } from 'graphql';\nimport { isSchemaAst, isSchemaJson, isSchemaText, isWrappedSchemaJson, pick } from './helpers';\nconst identifiersToLookFor = ['default', 'schema', 'typeDefs', 'data'];\n// Pick exports\nexport function pickExportFromModule({ module, filepath }) {\n    ensureModule({ module, filepath });\n    return resolveModule(ensureExports({ module, filepath }));\n}\nexport function pickExportFromModuleSync({ module, filepath }) {\n    ensureModule({ module, filepath });\n    return resolveModuleSync(ensureExports({ module, filepath }));\n}\n// module\nasync function resolveModule(identifiers) {\n    const exportValue = await pick(await identifiers, identifiersToLookFor);\n    return resolveExport(exportValue);\n}\nfunction resolveModuleSync(identifiers) {\n    const exportValue = pick(identifiers, identifiersToLookFor);\n    return resolveExport(exportValue);\n}\n// validate\nfunction ensureModule({ module, filepath }) {\n    if (!module) {\n        throw new Error(`Invalid export from export file ${filepath}: empty export!`);\n    }\n}\nfunction ensureExports({ module, filepath }) {\n    const identifiers = pick(module, identifiersToLookFor);\n    if (!identifiers) {\n        throw new Error(`Invalid export from export file ${filepath}: missing default export or 'schema' export!`);\n    }\n    return identifiers;\n}\n// Decide what to do with an exported value\nfunction resolveExport(fileExport) {\n    try {\n        if (isSchema(fileExport)) {\n            return fileExport;\n        }\n        if (isSchemaText(fileExport)) {\n            return parse(fileExport);\n        }\n        if (isWrappedSchemaJson(fileExport)) {\n            return buildClientSchema(fileExport.data);\n        }\n        if (isSchemaJson(fileExport)) {\n            return buildClientSchema(fileExport);\n        }\n        if (isSchemaAst(fileExport)) {\n            return fileExport;\n        }\n        return null;\n    }\n    catch (e) {\n        throw new Error('Exported schema must be of type GraphQLSchema, text, AST, or introspection JSON.');\n    }\n}\n//# sourceMappingURL=exports.js.map","import { pickExportFromModule, pickExportFromModuleSync } from './exports';\nexport async function tryToLoadFromExport(rawFilePath) {\n    try {\n        const filepath = ensureFilepath(rawFilePath);\n        const mod = await import(filepath);\n        return await pickExportFromModule({ module: mod, filepath });\n    }\n    catch (e) {\n        throw new Error(`Unable to load from file \"${rawFilePath}\": ${e.message}`);\n    }\n}\nexport function tryToLoadFromExportSync(rawFilePath) {\n    try {\n        const filepath = ensureFilepath(rawFilePath);\n        const mod = require(filepath);\n        return pickExportFromModuleSync({ module: mod, filepath });\n    }\n    catch (e) {\n        throw new Error(`Unable to load from file \"${rawFilePath}\": ${e.message}`);\n    }\n}\nfunction ensureFilepath(filepath) {\n    if (typeof require !== 'undefined' && require.cache) {\n        filepath = require.resolve(filepath);\n        if (require.cache[filepath]) {\n            delete require.cache[filepath];\n        }\n    }\n    return filepath;\n}\n//# sourceMappingURL=load-from-module.js.map","import { Kind, isSchema, print } from 'graphql';\nimport { debugLog, asArray, isValidPath, parseGraphQLSDL, printSchemaWithDirectives, } from '@graphql-tools/utils';\nimport { gqlPluckFromCodeString, gqlPluckFromCodeStringSync, } from '@graphql-tools/graphql-tag-pluck';\nimport { tryToLoadFromExport, tryToLoadFromExportSync } from './load-from-module';\nimport { isAbsolute, resolve } from 'path';\nimport { readFileSync, readFile, pathExists, pathExistsSync } from 'fs-extra';\nimport { cwd } from 'process';\nconst FILE_EXTENSIONS = ['.ts', '.tsx', '.js', '.jsx', '.vue'];\nexport class CodeFileLoader {\n    loaderId() {\n        return 'code-file';\n    }\n    async canLoad(pointer, options) {\n        if (isValidPath(pointer)) {\n            if (FILE_EXTENSIONS.find(extension => pointer.endsWith(extension))) {\n                const normalizedFilePath = isAbsolute(pointer) ? pointer : resolve(options.cwd || cwd(), pointer);\n                return pathExists(normalizedFilePath);\n            }\n        }\n        return false;\n    }\n    canLoadSync(pointer, options) {\n        if (isValidPath(pointer)) {\n            if (FILE_EXTENSIONS.find(extension => pointer.endsWith(extension))) {\n                const normalizedFilePath = isAbsolute(pointer) ? pointer : resolve(options.cwd || cwd(), pointer);\n                return pathExistsSync(normalizedFilePath);\n            }\n        }\n        return false;\n    }\n    async load(pointer, options) {\n        const normalizedFilePath = ensureAbsolutePath(pointer, options);\n        const errors = [];\n        if (!options.noPluck) {\n            try {\n                const content = await readFile(normalizedFilePath, { encoding: 'utf-8' });\n                const sdl = await gqlPluckFromCodeString(normalizedFilePath, content, options.pluckConfig);\n                if (sdl) {\n                    return parseSDL({ pointer, sdl, options });\n                }\n            }\n            catch (e) {\n                debugLog(`Failed to load schema from code file \"${normalizedFilePath}\": ${e.message}`);\n                errors.push(e);\n            }\n        }\n        if (!options.noRequire) {\n            try {\n                if (options && options.require) {\n                    await Promise.all(asArray(options.require).map(m => import(m)));\n                }\n                const loaded = await tryToLoadFromExport(normalizedFilePath);\n                const source = resolveSource(pointer, loaded, options);\n                if (source) {\n                    return source;\n                }\n            }\n            catch (e) {\n                errors.push(e);\n            }\n        }\n        if (errors.length > 0) {\n            throw errors[0];\n        }\n        return null;\n    }\n    loadSync(pointer, options) {\n        const normalizedFilePath = ensureAbsolutePath(pointer, options);\n        const errors = [];\n        if (!options.noPluck) {\n            try {\n                const content = readFileSync(normalizedFilePath, { encoding: 'utf-8' });\n                const sdl = gqlPluckFromCodeStringSync(normalizedFilePath, content, options.pluckConfig);\n                if (sdl) {\n                    return parseSDL({ pointer, sdl, options });\n                }\n            }\n            catch (e) {\n                debugLog(`Failed to load schema from code file \"${normalizedFilePath}\": ${e.message}`);\n                errors.push(e);\n            }\n        }\n        if (!options.noRequire) {\n            try {\n                if (options && options.require) {\n                    asArray(options.require).forEach(m => require(m));\n                }\n                const loaded = tryToLoadFromExportSync(normalizedFilePath);\n                const source = resolveSource(pointer, loaded, options);\n                if (source) {\n                    return source;\n                }\n            }\n            catch (e) {\n                errors.push(e);\n            }\n        }\n        if (errors.length > 0) {\n            throw errors[0];\n        }\n        return null;\n    }\n}\nfunction parseSDL({ pointer, sdl, options }) {\n    return parseGraphQLSDL(pointer, sdl, options);\n}\nfunction resolveSource(pointer, value, options) {\n    if (isSchema(value)) {\n        return {\n            location: pointer,\n            rawSDL: printSchemaWithDirectives(value, options),\n            schema: value,\n        };\n    }\n    else if ((value === null || value === void 0 ? void 0 : value.kind) === Kind.DOCUMENT) {\n        return {\n            location: pointer,\n            rawSDL: print(value),\n            document: value,\n        };\n    }\n    else if (typeof value === 'string') {\n        return parseGraphQLSDL(pointer, value, options);\n    }\n    return null;\n}\nfunction ensureAbsolutePath(pointer, options) {\n    return isAbsolute(pointer) ? pointer : resolve(options.cwd || cwd(), pointer);\n}\n//# sourceMappingURL=index.js.map"],"names":["isSchema","parse","buildClientSchema","isValidPath","isAbsolute","resolve","cwd","pathExists","pathExistsSync","readFile","gqlPluckFromCodeString","debugLog","asArray","readFileSync","gqlPluckFromCodeStringSync","parseGraphQLSDL","printSchemaWithDirectives","Kind","print"],"mappings":"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"}