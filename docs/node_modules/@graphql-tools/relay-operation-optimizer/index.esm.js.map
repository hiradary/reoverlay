{"version":3,"file":"index.esm.js","sources":["../../../dist/relay-operation-optimizer/src/index.js"],"sourcesContent":["import { printSchemaWithDirectives } from '@graphql-tools/utils';\nimport { parse, concatAST } from 'graphql';\nimport { transform as skipRedundantNodesTransform } from 'relay-compiler/lib/transforms/SkipRedundantNodesTransform';\nimport { transform as inlineFragmentsTransform } from 'relay-compiler/lib/transforms/InlineFragmentsTransform';\nimport { transform as applyFragmentArgumentTransform } from 'relay-compiler/lib/transforms/ApplyFragmentArgumentTransform';\nimport { transformWithOptions as flattenTransformWithOptions } from 'relay-compiler/lib/transforms/FlattenTransform';\nimport CompilerContext from 'relay-compiler/lib/core/CompilerContext';\nimport { transform as relayTransform } from 'relay-compiler/lib/core/RelayParser';\nimport { print as relayPrint } from 'relay-compiler/lib/core/IRPrinter';\nimport { create as relayCreate } from 'relay-compiler/lib/core/Schema';\nexport function optimizeDocuments(schema, documents, options = {}) {\n    // @TODO way for users to define directives they use, otherwise relay will throw an unknown directive error\n    // Maybe we can scan the queries and add them dynamically without users having to do some extra stuff\n    // transformASTSchema creates a new schema instance instead of mutating the old one\n    const adjustedSchema = relayCreate(printSchemaWithDirectives(schema, options));\n    const documentAsts = concatAST(documents);\n    const relayDocuments = relayTransform(adjustedSchema, documentAsts.definitions);\n    const result = [];\n    if (options.includeFragments) {\n        const fragmentCompilerContext = new CompilerContext(adjustedSchema)\n            .addAll(relayDocuments)\n            .applyTransforms([\n            applyFragmentArgumentTransform,\n            flattenTransformWithOptions({ flattenAbstractTypes: false }),\n            skipRedundantNodesTransform,\n        ]);\n        result.push(...fragmentCompilerContext\n            .documents()\n            .filter(doc => doc.kind === 'Fragment')\n            .map(doc => parse(relayPrint(adjustedSchema, doc), options)));\n    }\n    const queryCompilerContext = new CompilerContext(adjustedSchema)\n        .addAll(relayDocuments)\n        .applyTransforms([\n        applyFragmentArgumentTransform,\n        inlineFragmentsTransform,\n        flattenTransformWithOptions({ flattenAbstractTypes: false }),\n        skipRedundantNodesTransform,\n    ]);\n    result.push(...queryCompilerContext.documents().map(doc => parse(relayPrint(adjustedSchema, doc), options)));\n    return result;\n}\n//# sourceMappingURL=index.js.map"],"names":["relayCreate","relayTransform","applyFragmentArgumentTransform","flattenTransformWithOptions","skipRedundantNodesTransform","relayPrint","inlineFragmentsTransform"],"mappings":";;;;;;;;;;;AAUO,SAAS,iBAAiB,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,GAAG,EAAE,EAAE;AACnE;AACA;AACA;AACA,IAAI,MAAM,cAAc,GAAGA,MAAW,CAAC,yBAAyB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;AACnF,IAAI,MAAM,YAAY,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;AAC9C,IAAI,MAAM,cAAc,GAAGC,SAAc,CAAC,cAAc,EAAE,YAAY,CAAC,WAAW,CAAC,CAAC;AACpF,IAAI,MAAM,MAAM,GAAG,EAAE,CAAC;AACtB,IAAI,IAAI,OAAO,CAAC,gBAAgB,EAAE;AAClC,QAAQ,MAAM,uBAAuB,GAAG,IAAI,eAAe,CAAC,cAAc,CAAC;AAC3E,aAAa,MAAM,CAAC,cAAc,CAAC;AACnC,aAAa,eAAe,CAAC;AAC7B,YAAYC,WAA8B;AAC1C,YAAYC,oBAA2B,CAAC,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC;AACxE,YAAYC,WAA2B;AACvC,SAAS,CAAC,CAAC;AACX,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,uBAAuB;AAC9C,aAAa,SAAS,EAAE;AACxB,aAAa,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC;AACnD,aAAa,GAAG,CAAC,GAAG,IAAI,KAAK,CAACC,KAAU,CAAC,cAAc,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1E,KAAK;AACL,IAAI,MAAM,oBAAoB,GAAG,IAAI,eAAe,CAAC,cAAc,CAAC;AACpE,SAAS,MAAM,CAAC,cAAc,CAAC;AAC/B,SAAS,eAAe,CAAC;AACzB,QAAQH,WAA8B;AACtC,QAAQI,WAAwB;AAChC,QAAQH,oBAA2B,CAAC,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC;AACpE,QAAQC,WAA2B;AACnC,KAAK,CAAC,CAAC;AACP,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,oBAAoB,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,CAACC,KAAU,CAAC,cAAc,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACjH,IAAI,OAAO,MAAM,CAAC;AAClB;;;;"}