{"version":3,"file":"index.cjs.js","sources":["../../../dist/loaders/json-file/src/index.js"],"sourcesContent":["import { parseGraphQLJSON, isValidPath, } from '@graphql-tools/utils';\nimport { isAbsolute, resolve } from 'path';\nimport { readFile, readFileSync, pathExists, pathExistsSync } from 'fs-extra';\nimport { cwd } from 'process';\nconst FILE_EXTENSIONS = ['.json'];\nexport class JsonFileLoader {\n    loaderId() {\n        return 'json-file';\n    }\n    async canLoad(pointer, options) {\n        if (isValidPath(pointer)) {\n            if (FILE_EXTENSIONS.find(extension => pointer.endsWith(extension))) {\n                const normalizedFilePath = isAbsolute(pointer) ? pointer : resolve(options.cwd || cwd(), pointer);\n                return pathExists(normalizedFilePath);\n            }\n        }\n        return false;\n    }\n    canLoadSync(pointer, options) {\n        if (isValidPath(pointer)) {\n            if (FILE_EXTENSIONS.find(extension => pointer.endsWith(extension))) {\n                const normalizedFilePath = isAbsolute(pointer) ? pointer : resolve(options.cwd || cwd(), pointer);\n                return pathExistsSync(normalizedFilePath);\n            }\n        }\n        return false;\n    }\n    async load(pointer, options) {\n        const normalizedFilePath = isAbsolute(pointer) ? pointer : resolve(options.cwd || cwd(), pointer);\n        try {\n            const jsonContent = await readFile(normalizedFilePath, { encoding: 'utf8' });\n            return parseGraphQLJSON(pointer, jsonContent, options);\n        }\n        catch (e) {\n            throw new Error(`Unable to read JSON file: ${normalizedFilePath}: ${e.message || e}`);\n        }\n    }\n    loadSync(pointer, options) {\n        const normalizedFilepath = isAbsolute(pointer) ? pointer : resolve(options.cwd || cwd(), pointer);\n        try {\n            const jsonContent = readFileSync(normalizedFilepath, 'utf8');\n            return parseGraphQLJSON(pointer, jsonContent, options);\n        }\n        catch (e) {\n            throw new Error(`Unable to read JSON file: ${normalizedFilepath}: ${e.message || e}`);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["isValidPath","isAbsolute","resolve","cwd","pathExists","pathExistsSync","readFile","parseGraphQLJSON","readFileSync"],"mappings":";;;;;;;;;AAIA,MAAM,eAAe,GAAG,CAAC,OAAO,CAAC,CAAC;AAC3B,MAAM,cAAc,CAAC;AAC5B,IAAI,QAAQ,GAAG;AACf,QAAQ,OAAO,WAAW,CAAC;AAC3B,KAAK;AACL,IAAI,MAAM,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE;AACpC,QAAQ,IAAIA,iBAAW,CAAC,OAAO,CAAC,EAAE;AAClC,YAAY,IAAI,eAAe,CAAC,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE;AAChF,gBAAgB,MAAM,kBAAkB,GAAGC,eAAU,CAAC,OAAO,CAAC,GAAG,OAAO,GAAGC,YAAO,CAAC,OAAO,CAAC,GAAG,IAAIC,WAAG,EAAE,EAAE,OAAO,CAAC,CAAC;AAClH,gBAAgB,OAAOC,kBAAU,CAAC,kBAAkB,CAAC,CAAC;AACtD,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE;AAClC,QAAQ,IAAIJ,iBAAW,CAAC,OAAO,CAAC,EAAE;AAClC,YAAY,IAAI,eAAe,CAAC,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE;AAChF,gBAAgB,MAAM,kBAAkB,GAAGC,eAAU,CAAC,OAAO,CAAC,GAAG,OAAO,GAAGC,YAAO,CAAC,OAAO,CAAC,GAAG,IAAIC,WAAG,EAAE,EAAE,OAAO,CAAC,CAAC;AAClH,gBAAgB,OAAOE,sBAAc,CAAC,kBAAkB,CAAC,CAAC;AAC1D,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,MAAM,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE;AACjC,QAAQ,MAAM,kBAAkB,GAAGJ,eAAU,CAAC,OAAO,CAAC,GAAG,OAAO,GAAGC,YAAO,CAAC,OAAO,CAAC,GAAG,IAAIC,WAAG,EAAE,EAAE,OAAO,CAAC,CAAC;AAC1G,QAAQ,IAAI;AACZ,YAAY,MAAM,WAAW,GAAG,MAAMG,gBAAQ,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;AACzF,YAAY,OAAOC,sBAAgB,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AACnE,SAAS;AACT,QAAQ,OAAO,CAAC,EAAE;AAClB,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,0BAA0B,EAAE,kBAAkB,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,SAAS;AACT,KAAK;AACL,IAAI,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE;AAC/B,QAAQ,MAAM,kBAAkB,GAAGN,eAAU,CAAC,OAAO,CAAC,GAAG,OAAO,GAAGC,YAAO,CAAC,OAAO,CAAC,GAAG,IAAIC,WAAG,EAAE,EAAE,OAAO,CAAC,CAAC;AAC1G,QAAQ,IAAI;AACZ,YAAY,MAAM,WAAW,GAAGK,oBAAY,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;AACzE,YAAY,OAAOD,sBAAgB,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AACnE,SAAS;AACT,QAAQ,OAAO,CAAC,EAAE;AAClB,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,0BAA0B,EAAE,kBAAkB,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,SAAS;AACT,KAAK;AACL;;;;"}