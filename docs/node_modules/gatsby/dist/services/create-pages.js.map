{"version":3,"sources":["../../src/services/create-pages.ts"],"names":["createPages","parentSpan","gatsbyNodeGraphQLFunction","store","reporter","panic","activity","activityTimer","start","graphql","traceId","waitForCascadingActions","span","verbose","getState","nodes","size","nodesByType","get","end"],"mappings":";;;;;;;AAEA;;AACA;;AAEO,eAAeA,WAAf,CAA2B;AAChCC,EAAAA,UADgC;AAEhCC,EAAAA,yBAFgC;AAGhCC,EAAAA;AAHgC,CAA3B,EAImC;AAAA;;AACxC,MAAI,CAACA,KAAL,EAAY;AACVC,sBAASC,KAAT,CAAgB,uBAAhB;AACD;;AACD,QAAMC,QAAQ,GAAGF,kBAASG,aAAT,CAAwB,aAAxB,EAAsC;AACrDN,IAAAA;AADqD,GAAtC,CAAjB;;AAGAK,EAAAA,QAAQ,CAACE,KAAT,GAPwC,CAQxC;AACA;;AAEA,QAAM,4BACH,aADG,EAEJ;AACEC,IAAAA,OAAO,EAAEP,yBADX;AAEEQ,IAAAA,OAAO,EAAG,qBAFZ;AAGEC,IAAAA,uBAAuB,EAAE,IAH3B;AAIEV,IAAAA,UAAU,EAAEK,QAAQ,CAACM;AAJvB,GAFI,EAQJ;AAAEN,IAAAA;AAAF,GARI,CAAN;;AAUAF,oBAASS,OAAT,CACG,YAAWV,KAAK,CAACW,QAAN,GAAiBC,KAAjB,CAAuBC,IAAK,eACtCb,KAAK,CAACW,QAAN,GAAiBG,WAAjB,CAA6BD,IAC9B,eAFD,yBAGEb,KAAK,CAACW,QAAN,GAAiBG,WAHnB,oFAGE,sBAA8BC,GAA9B,CAAmC,UAAnC,CAHF,2DAGE,uBAA+CF,IAChD,iBALH;;AAOAV,EAAAA,QAAQ,CAACa,GAAT,GA5BwC,CA8BxC;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD","sourcesContent":["import { IBuildContext } from \"./\"\n\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\n\nexport async function createPages({\n  parentSpan,\n  gatsbyNodeGraphQLFunction,\n  store,\n}: Partial<IBuildContext>): Promise<void> {\n  if (!store) {\n    reporter.panic(`store not initialized`)\n  }\n  const activity = reporter.activityTimer(`createPages`, {\n    parentSpan,\n  })\n  activity.start()\n  // const timestamp = Date.now()\n  // const currentPages = new Map<string, IGatsbyPage>(store.getState().pages)\n\n  await apiRunnerNode(\n    `createPages`,\n    {\n      graphql: gatsbyNodeGraphQLFunction,\n      traceId: `initial-createPages`,\n      waitForCascadingActions: true,\n      parentSpan: activity.span,\n    },\n    { activity }\n  )\n  reporter.verbose(\n    `Now have ${store.getState().nodes.size} nodes with ${\n      store.getState().nodesByType.size\n    } types, and ${\n      store.getState().nodesByType?.get(`SitePage`)?.size\n    } SitePage nodes`\n  )\n  activity.end()\n\n  // reporter.info(`Checking for deleted pages`)\n\n  // const deletedPages = deleteUntouchedPages(store.getState().pages, timestamp)\n\n  // reporter.info(\n  //   `Deleted ${deletedPages.length} page${deletedPages.length === 1 ? `` : `s`}`\n  // )\n\n  // const tim = reporter.activityTimer(`Checking for changed pages`)\n  // tim.start()\n\n  // const { changedPages } = findChangedPages(\n  //   currentPages,\n  //   store.getState().pages\n  // )\n\n  // reporter.info(\n  //   `Found ${changedPages.length} changed page${\n  //     changedPages.length === 1 ? `` : `s`\n  //   }`\n  // )\n  // tim.end()\n\n  // return {\n  //   changedPages,\n  //   deletedPages,\n  // }\n}\n"],"file":"create-pages.js"}