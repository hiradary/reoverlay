{"version":3,"sources":["../../src/services/calculate-dirty-queries.ts"],"names":["calculateDirtyQueries","store","reporter","panic","state","getState","queryIds"],"mappings":";;;;;;;AAAA;;AAEA;;AAEO,eAAeA,qBAAf,CAAqC;AAC1CC,EAAAA;AAD0C,CAArC,EAIJ;AACD,MAAI,CAACA,KAAL,EAAY;AACVC,sBAASC,KAAT,CAAgB,0CAAhB;AACD;;AACD,QAAMC,KAAK,GAAGH,KAAK,CAACI,QAAN,EAAd,CAJC,CAKD;;AAEA,QAAMC,QAAQ,GAAG,qCAAyBF,KAAzB,CAAjB;AACA,SAAO;AAAEE,IAAAA,QAAQ,EAAE,0BAAcA,QAAd;AAAZ,GAAP;AACD","sourcesContent":["import { calcInitialDirtyQueryIds, groupQueryIds } from \"../query\"\nimport { IBuildContext, IGroupedQueryIds } from \"./\"\nimport reporter from \"gatsby-cli/lib/reporter\"\n\nexport async function calculateDirtyQueries({\n  store,\n}: Partial<IBuildContext>): Promise<{\n  queryIds: IGroupedQueryIds\n}> {\n  if (!store) {\n    reporter.panic(`Cannot run service without a redux store`)\n  }\n  const state = store.getState()\n  // TODO: Check filesDirty from context\n\n  const queryIds = calcInitialDirtyQueryIds(state)\n  return { queryIds: groupQueryIds(queryIds) }\n}\n"],"file":"calculate-dirty-queries.js"}