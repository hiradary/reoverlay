{"version":3,"sources":["../../src/bootstrap/index.ts"],"names":["tracer","bootstrap","initialContext","spanArgs","parentSpan","childOf","startSpan","context","gatsbyNodeGraphQLFunction","store","reporter","finish","workerPool"],"mappings":";;;;;;;AAAA;;AACA;;AAaA;;AACA;;AACA;;AAEA,MAAMA,MAAM,GAAG,gCAAf;;AAEO,eAAeC,SAAf,CACLC,cADK,EAKJ;AACD,QAAMC,QAAQ,GAAGD,cAAc,CAACE,UAAf,GACb;AAAEC,IAAAA,OAAO,EAAEH,cAAc,CAACE;AAA1B,GADa,GAEb,EAFJ;AAIAF,EAAAA,cAAc,CAACE,UAAf,GAA4BJ,MAAM,CAACM,SAAP,CAAkB,WAAlB,EAA8BH,QAA9B,CAA5B;AAEA,QAAMI,OAAO,GAAG,EACd,GAAGL,cADW;AAEd,QAAI,MAAM,0BAAWA,cAAX,CAAV;AAFc,GAAhB;AAKA,QAAM,+BAAgBK,OAAhB,CAAN;AACA,QAAM,2BAAYA,OAAZ,CAAN;AAEA,QAAM,2BAAYA,OAAZ,CAAN;AAEAA,EAAAA,OAAO,CAACC,yBAAR,GAAoC,8CAClCD,OAAO,CAACE,KAD0B,EAElCC,iBAFkC,CAApC;AAKA,QAAM,2BAAYH,OAAZ,CAAN;AAEA,QAAM,qCAAsBA,OAAtB,CAAN;AAEA,QAAM,yCAA0BA,OAA1B,CAAN;AAEA,QAAM,8BAAeA,OAAf,CAAN;AAEA,QAAM,iCAAkBA,OAAlB,CAAN;AAEA;AAEA,QAAM,6BAAcA,OAAd,CAAN;AAEAL,EAAAA,cAAc,CAACE,UAAf,CAA0BO,MAA1B;AAEA,SAAO;AACLH,IAAAA,yBAAyB,EAAED,OAAO,CAACC,yBAD9B;AAELI,IAAAA,UAAU,EAAEL,OAAO,CAACK;AAFf,GAAP;AAID","sourcesContent":["import { startRedirectListener } from \"./redirects-writer\"\nimport {\n  IBuildContext,\n  initialize,\n  customizeSchema,\n  sourceNodes,\n  buildSchema,\n  createPages,\n  createPagesStatefully,\n  extractQueries,\n  writeOutRedirects,\n  postBootstrap,\n  rebuildSchemaWithSitePage,\n} from \"../services\"\nimport { Runner, createGraphQLRunner } from \"./create-graphql-runner\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { globalTracer } from \"opentracing\"\nimport JestWorker from \"jest-worker\"\nconst tracer = globalTracer()\n\nexport async function bootstrap(\n  initialContext: IBuildContext\n): Promise<{\n  gatsbyNodeGraphQLFunction: Runner\n  workerPool: JestWorker\n}> {\n  const spanArgs = initialContext.parentSpan\n    ? { childOf: initialContext.parentSpan }\n    : {}\n\n  initialContext.parentSpan = tracer.startSpan(`bootstrap`, spanArgs)\n\n  const context = {\n    ...initialContext,\n    ...(await initialize(initialContext)),\n  }\n\n  await customizeSchema(context)\n  await sourceNodes(context)\n\n  await buildSchema(context)\n\n  context.gatsbyNodeGraphQLFunction = createGraphQLRunner(\n    context.store,\n    reporter\n  )\n\n  await createPages(context)\n\n  await createPagesStatefully(context)\n\n  await rebuildSchemaWithSitePage(context)\n\n  await extractQueries(context)\n\n  await writeOutRedirects(context)\n\n  startRedirectListener()\n\n  await postBootstrap(context)\n\n  initialContext.parentSpan.finish()\n\n  return {\n    gatsbyNodeGraphQLFunction: context.gatsbyNodeGraphQLFunction,\n    workerPool: context.workerPool,\n  }\n}\n"],"file":"index.js"}